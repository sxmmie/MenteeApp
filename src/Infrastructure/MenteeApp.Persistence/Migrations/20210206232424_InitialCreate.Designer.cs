// <auto-generated />
using System;
using MenteeApp.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MenteeApp.Persistence.Migrations
{
    [DbContext(typeof(MenteeAppDbContext))]
    [Migration("20210206232424_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MenteeApp.Domain.Entities.MeetUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Attendance")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("MeetUpCancelled")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("MeetUpEndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("MeetUpStartTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("MenteeId")
                        .HasColumnType("int");

                    b.Property<int?>("MentorId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdateMeetUpTopic")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("MenteeId");

                    b.HasIndex("MentorId");

                    b.ToTable("MeetUps");
                });

            modelBuilder.Entity("MenteeApp.Domain.Entities.Mentee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MentorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.ToTable("Mentees");
                });

            modelBuilder.Entity("MenteeApp.Domain.Entities.Mentor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mentors");
                });

            modelBuilder.Entity("MenteeApp.Domain.Entities.MeetUp", b =>
                {
                    b.HasOne("MenteeApp.Domain.Entities.Mentee", null)
                        .WithMany("MeetUpsAttended")
                        .HasForeignKey("MenteeId");

                    b.HasOne("MenteeApp.Domain.Entities.Mentor", null)
                        .WithMany("MeetUpsAttended")
                        .HasForeignKey("MentorId");
                });

            modelBuilder.Entity("MenteeApp.Domain.Entities.Mentee", b =>
                {
                    b.HasOne("MenteeApp.Domain.Entities.Mentor", "Mentor")
                        .WithMany("Mentees")
                        .HasForeignKey("MentorId");
                });
#pragma warning restore 612, 618
        }
    }
}
